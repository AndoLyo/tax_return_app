repos:
  # コードフォーマッター
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # importの整理
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # 静的解析
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]

  # 型チェック
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports]

  # セキュリティチェック
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, ., -f, json, -o, bandit-report.json]
        exclude: ^tests/

  # 依存関係の脆弱性チェック
  - repo: https://github.com/jendrikseipp/vulture
    rev: v2.10
    hooks:
      - id: vulture
        args: [--min-confidence, 80]

  # コミットメッセージのチェック
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # ファイルサイズのチェック
  - repo: local
    hooks:
      - id: check-large-files
        name: Check for large files
        entry: bash -c 'if [ "$(find . -name "*.py" -size +1M | wc -l)" -gt 0 ]; then echo "Large Python files found:"; find . -name "*.py" -size +1M; exit 1; fi'
        language: system
        types: [python]

  # 機密情報のチェック
  - repo: local
    hooks:
      - id: check-secrets
        name: Check for secrets
        entry: bash -c 'if grep -r "password\|secret\|key\|token" . --exclude-dir=.git --exclude-dir=__pycache__ --exclude-dir=.venv | grep -v "example\|dummy\|test"; then echo "Potential secrets found"; exit 1; fi'
        language: system
        types: [python]

ci:
  autofix_commit_msg: "style: auto-fix code formatting and imports"
  autoupdate_commit_msg: "ci: pre-commit autoupdate"
